<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>es.david.mytest</groupId>
	<artifactId>MyTest</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>MyTest</name>
	<description>proyecto test de Spring Boot</description>
   
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

<!--  PARENT -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.0.RELEASE</version>
	</parent>


    <!--  SPRING Starter POMs -->
	<!-- Dependencias necesarias para una aplicacion web -->
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>


		<!-- devtools añade automaticamente el autodeploy, solo para entornos de 
			desarrollo -->
		<!-- "Developer tools are automatically disabled when running a fully packaged 
			application." -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>



		

		<!-- Actuator endpoints allow you to monitor and interact with your application. -->
		<!-- proporciona una lista de endpoints http://docs.spring.io/spring-boot/docs/1.3.x-SNAPSHOT/reference/html/production-ready-endpoints.html -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- spring-boot-starter-hateoas 
		
			Se usa hipermedia language (HAL) 
		    application/hal+json	
		    two simple concepts: Resources and Links.
		    HAL has a media type for both the JSON and XML variants, whos names are application/hal+json and application/hal+xml
		    (añade _links)
		    
		    To model an object representation, you create a resource representation class. As the _links property is a fundamental 
		    property of the representation model, Spring HATEOAS ships with a base class ResourceSupport that allows you to add 
		    instances of Link and ensures that they are rendered as shown above.	
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>


		
		<!-- spring-boot-starter-test -->




		<dependency>
			<groupId>com.mangofactory</groupId>
			<artifactId>swagger-springmvc</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.ajar</groupId>
			<artifactId>swagger-spring-mvc-ui</artifactId>
			<version>0.4</version>
		</dependency>


	</dependencies>

	<!-- Plugin maven para empaquetar los archivos ejecutables jar -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				
			</plugin>
		</plugins>
	</build>
	
	<!--  aqui puedo definir tipo, si jar o war o pom. Con Spring boot puedo ejecutar directamente un jar con su main() -->
   <packaging>jar</packaging>
	




	
	
	
</project>